# A part of NonVisual Desktop Access (NVDA)
# Copyright (C) 2014-2023 NV Access Limited
# This file is covered by the GNU General Public License.
# See the file COPYING for more details.

Import('env')

env['MIDLCOM']=env['MIDLCOM'][:-6]

env.Command("AccessibleMarshal.def", "#/miscDeps/include/ISimpleDOM/AccessibleMarshal.def", Copy("$TARGET", "$SOURCE"))
env.Command("AccessibleMarshal.rc", "#/miscDeps/include/ISimpleDOM/AccessibleMarshal.rc", Copy("$TARGET", "$SOURCE"))
env.Command("AccessibleMarshalThunk.c", "#/miscDeps/include/ISimpleDOM/AccessibleMarshalThunk.c", Copy("$TARGET", "$SOURCE"))

AccessibleMarshal = env.SharedLibrary(
	target="AccessibleMarshal",
	source=[
		"AccessibleMarshal.def",
		"AccessibleMarshal.rc",
		"AccessibleMarshalThunk.c"
	],
)

rc_builder = env.Builder(action=env.Action([["rc", "/fo", "$TARGET", "$SOURCE"]]))
env.Append(BUILDERS={'RC': rc_builder})
env.RC(target='AccessibleMarshal.res', source='AccessibleMarshal.rc')

# Copy some secondary IDL files included by ISimpleDOM.idl
idlDeps = [
	"AccessibleMarshal.res",
	"AccessibleMarshal.def",
	"AccessibleMarshalThunk.c",
	env.Command("ISimpleDOMNode.idl", "#/miscDeps/include/ISimpleDOM/ISimpleDOMNode.idl", Copy("$TARGET", "$SOURCE")),
	env.Command("ISimpleDOMText.idl", "#/miscDeps/include/ISimpleDOM/ISimpleDOMText.idl", Copy("$TARGET", "$SOURCE")),
	env.Command("ISimpleDOMDocument.idl", "#/miscDeps/include/ISimpleDOM/ISimpleDOMDocument.idl", Copy("$TARGET", "$SOURCE")),
]
# copy ISimpleDOM.idl but changing imports of the secondary files to #includes
# This is necessary as midl will not build secondary header files. this way the primary header file will contain all secondary header file content
idlFile=env.Substfile(
	target="iSimpleDOM.idl",
	source="#/miscDeps/include/ISimpleDOM/ISimpleDOM.idl",
	SUBST_DICT={
		'import "ISimpleDOM':'#include "ISimpleDOM',
	}
)
# SCons doesn't scan the file we just created,
# so we must explicitly declare its dependencies.
env.Depends(idlFile, idlDeps)

# Define the target for AccessibleMarshalThunk.c
env.Object('AccessibleMarshalThunk.c')

tlbFile,headerFile,iidSourceFile,proxySourceFile,dlldataSourceFile=env.TypeLibrary(
	source=idlFile,
	MIDLFLAGS = [env['MIDLFLAGS'], '/c_ext', '/I',  Dir('.')],
)


# #7036: hack: Ignore midl.exe when deciding to rebuild, as its position in the dependencies
# is different in the run before the idl files are copied versus subsequent runs.
midl=env.WhereIs(env["MIDL"])
for target in (tlbFile,headerFile,iidSourceFile,proxySourceFile,dlldataSourceFile):
	env.Ignore(target,midl)

proxyDll=env.COMProxyDll(
	target='ISimpleDOM',
	source=[iidSourceFile,proxySourceFile,dlldataSourceFile],
	# This CLSID must be unique to this dll. A new one can be generated with import comtypes; comtypes.GUID.create_new()
	proxyClsid="{435E0FC9-344B-41D4-88DD-4CAAD499ACE5}",
)

Return([
	# "AccessibleMarshal",
	"proxyDll",
	"tlbFile",
	"headerFile",
	"iidSourceFile",
	"proxySourceFile",
	"dlldataSourceFile"
])
